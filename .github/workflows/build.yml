name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

  pull_request:
    branches:
      - master
    paths-ignore:
      - README.md

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        name:
          - macOS
          - "CentOS 7"
          - "Ubuntu 18.04"
        include:
          - name: "macOS"
            os: macos-latest
            docker_image: none

          - name: "CentOS 7"
            os: ubuntu-latest
            docker_image: yugabyteci/yb_build_infra_centos7:v2020-03-24T08_20_00

          - name: "Ubuntu 18.04"
            os: ubuntu-latest
            docker_image: yugabyteci/yb_build_infra_ubuntu1804:v2020-03-24T08_20_00

    if: >
      (github.event_name == 'push' &&
       !contains(github.event.head_commit.message, 'skip ci') &&
       !contains(github.event.head_commit.message, 'ci skip')) ||
      github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          echo "OSTYPE (outside Docker): $OSTYPE"
          echo "Build name: ${{ matrix.name }}"
          echo "Docker image: ${{ matrix.docker_image }}"
          if [[ $OSTYPE == linux* ]]; then
            build_dir_in_container=/home/yugabyte/code/yugabyte-bash-common
            docker run \
              -i \
              --mount type=bind,source="$PWD",target="$build_dir_in_container" \
              "${{ matrix.docker_image }}" \
              bash -c "
                echo \"OSTYPE (inside Docker): \$OSTYPE\"
                cd \"$build_dir_in_container\"
                test/test.sh
              "
          elif [[ $OSTYPE == darwin* ]]; then
            # Pull in recent bash (mac ships with v3, this pulls in v5 as of 2/16/2022).
            # Also install coreutils as it is a standard part of our mac development environemnt.
            # Coreutils provides 'realpath' which this lib uses.
            brew install bash coreutils
            export PATH="/usr/local/bin:${PATH}"
            system_profiler SPSoftwareDataType
            sw_vers
            test/test.sh
          fi
